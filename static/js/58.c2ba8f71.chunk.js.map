{"version":3,"sources":["../../common/formFields/PFEP/PFEPStatus.formFields.js","forms/PFEP/PFEPStatus.form.js"],"names":["PFEPStatusFormFields","key","type","FORM_ELEMENT_TYPES","SWITCH","others","defaultValue","formOptions","noStyle","customLabel","kwargs","placeholder","INPUT","Item","PFEPStatusForm","id","onCancel","active","onDone","useState","loading","setLoading","dropdownVisible","setDropdownVisible","useForm","form","dispatch","useDispatch","state","useSelector","e","data","pfepData","submit","a","ADD_PFEP_DATA","editPFEP","error","notification","warning","message","description","createPFEP","useEffect","STOP_STEP_LOADING","menu","onClick","className","CloseOutlined","slice","map","item","idx","toString","style","flexWrap","marginRight","formItem","spinning","orientation","onFinish","initialValues","layout","autoComplete","justifyContent","span","trigger","overlay","onVisibleChange","visible","preventDefault","DownOutlined","justify","htmlType"],"mappings":"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","file":"static/js/58.c2ba8f71.chunk.js","sourcesContent":["import { FORM_ELEMENT_TYPES } from 'web/src/constants/formFields.constant';\n\n// {\n//     key: 'status',\n//     kwargs: {\n//       placeholder: 'Select',\n//     },\n//     type: FORM_ELEMENT_TYPES.SELECT,\n//     others: {\n//       selectOptions: [\n//       'TP Shared', 'CP Shared', 'TP Approved',\n//         'CP Approved','Trials Done','Trials Approved','ESA Signed','Flow started',\n//         'On Hold' , 'PFEP Dropped' ,'Not Qualified'\n//       ],\n//     },\n//   },\n\nexport const PFEPStatusFormFields = [\n  {\n    key: 'tp_shared',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: {\n      defaultValue:false,\n      formOptions:{ noStyle:true }\n    },\n    customLabel: 'TP Shared',\n  },\n  {\n    key: 'cp_shared',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: {\n      defaultValue:false,\n      formOptions:{ noStyle:true }\n    },\n    customLabel: 'CP Shared',\n  },\n  {\n    key: 'tp_approved',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: {\n      defaultValue:false,\n      formOptions:{ noStyle:true }\n    },\n    customLabel: 'TP Approved',\n  },\n  {\n    key: 'cp_approved',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: {\n      defaultValue:false,\n      formOptions:{ noStyle:true }\n    },\n    customLabel: 'CP Approved',\n  },\n  {\n    key: 'trials_done',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: {\n      defaultValue:false,\n      formOptions:{ noStyle:true }\n    },\n    customLabel: 'Trials Done',\n  },\n\n  {\n    key: 'trials_approved',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: {\n      defaultValue:false,\n      formOptions:{ noStyle:true }\n    },\n    customLabel: 'Trials Approved',\n  },\n  {\n    key: 'esa_signed',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    others: {\n      defaultValue:false,\n      formOptions:{ noStyle:true }\n    },\n    customLabel: 'ESA Signed',\n  },\n\n  {\n    key: 'flow_started',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    customLabel: 'Flow started',\n    others: {\n      defaultValue:false,\n      formOptions:{ noStyle:true }\n    },\n  },\n  {\n    key: 'on_hold',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    customLabel: 'On Hold',\n    others: {\n      formOptions:{ noStyle:true }\n    } },\n  {\n    key: 'pfep_dropped',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    customLabel: 'PFEP Dropped',\n    others: {\n      formOptions:{ noStyle:true }\n    } },\n  {\n    key: 'not_qualified',\n    type: FORM_ELEMENT_TYPES.SWITCH,\n    customLabel: 'Not Qualified',\n    others: {\n      formOptions:{ noStyle:true }\n    } },\n  {\n    key: 'solution_remark',\n    kwargs: {\n      placeholder: 'Remark',\n    },\n    others: {\n      formOptions:{ noStyle:true }\n    },  type: FORM_ELEMENT_TYPES.INPUT,\n    customLabel: 'Remark',\n  },\n]\n","import React, { useEffect, useState } from 'react';\nimport { Form, Col, Row, Button, Divider, Spin,Menu, notification, Dropdown } from 'antd';\nimport formItem from 'hocs/formItem.hoc';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_PFEP_DATA, STOP_STEP_LOADING } from 'common/actions';\nimport {\n  CloseOutlined,\n  DownOutlined,\n} from '@ant-design/icons';\nimport { createPFEP, editPFEP } from 'common/api/auth';\nimport { PFEPStatusFormFields } from 'common/formFields/PFEP/PFEPStatus.formFields';\n\nconst { Item }  = Menu;\n\nexport const PFEPStatusForm = ({ id, onCancel,active,onDone }) => {\n  const [loading,setLoading] = useState(false);\n  const [dropdownVisible,setDropdownVisible] = useState(false);\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const state =  useSelector(e=>(e.data.pfepData))\n\n\n  const submit = async (data) =>{\n    setLoading(true)\n    await dispatch({ type:ADD_PFEP_DATA,data });\n    setLoading(false)\n    if(active === 5){\n      if(id){\n        const { error } = await editPFEP(id,{ ...state,...data });\n        if (error) {\n          notification.warning({\n            message: 'Unable To Edit.',\n            description:\n            'Something went wrong PFEP editing failed.',\n          });\n          onCancel();\n        } else {\n          onDone();\n        }\n      }\n      else{\n        const { error } = await createPFEP({ ...state,...data });\n        if (error) {\n          notification.warning({\n            message: 'Unable To Create.',\n            description:\n            'Something went wrong PFEP creation failed.',\n          });\n          onCancel();\n        } else {\n          onDone();\n        }\n      }\n    }}\n  useEffect( ()=>{\n    if(active!==5){\n      form.submit()\n      dispatch({ type:STOP_STEP_LOADING })\n    }\n  },[active])\n  const menu = (\n    <Menu onClick={(e)=>{if(e.key==='close'){setDropdownVisible(false)}}}>\n      <Item key='close'>\n        <div className='row justify-between align-center'>\n          Close\n          <CloseOutlined />\n        </div>\n      </Item>\n      {PFEPStatusFormFields.slice(0,11).map((item, idx) => (\n        <Item key={idx.toString()}>\n          <div className='row justify-between'>\n            <div style={{ flexWrap:'wrap',marginRight:'5px' }}>\n              {item.customLabel}\n              {' '}\n            </div>\n            {formItem(item)}\n          </div>\n        </Item>\n      ))}\n    </Menu>\n  )\n  return (\n    <Spin spinning={loading}>\n      <Divider orientation='left'>Status</Divider>\n      <Form\n        onFinish={submit}\n        initialValues={state}\n        form={form}\n        layout='vertical'\n        // hideRequiredMark\n        autoComplete='off'\n      >\n        <Row style={{ justifyContent: 'left' }}>\n          {PFEPStatusFormFields.slice(11,12).map((item, idx) => (\n            <Col span={6}>\n              <div key={idx.toString()} className='p-2'>\n                {formItem(item)}\n              </div>\n            </Col>\n          ))}\n          {' '}\n          <Col span={5}>\n            <div className='p-2'>\n              <Dropdown\n                trigger={['click']}\n                overlay={menu}\n                onVisibleChange={(e)=>{setDropdownVisible(e)}}\n                visible={dropdownVisible}\n              >\n                <Button className='ant-dropdown-link' onClick={e => e.preventDefault()}>\n                  Select Status\n                  {' '}\n                  <DownOutlined />\n                </Button>\n              </Dropdown>\n            </div>\n            <br />\n            <br />\n            <br />\n          </Col>\n        </Row>\n        <Row justify='space-between'>\n          <div className='row'>\n            <Button type='primary' htmlType='submit'>\n              Submit\n            </Button>\n            <div className='p-2' />\n            <Button type='primary' onClick={onCancel}>\n              Cancel\n            </Button>\n          </div>\n        </Row>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default PFEPStatusForm;\n\n"],"sourceRoot":""}