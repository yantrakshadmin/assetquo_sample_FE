{"version":3,"sources":["components/Docket/Docket.js"],"names":["Title","Docket","location","match","useState","allotment","setAllotment","total","setTotal","useEffect","a","state","id","retrieveAllotmentsCalender","data","len","pathname","length","slice","fetchAllotment","tot","flows","map","flow","alloted","alloted_quantity","kit","products","prod","quantity","product","priceperunit","calcTotal","b","className","src","process","alt","level","style","fontWeight","span","display","transaction_no","dispatch_date","idx","kit_name","fontFamily","wordWrap","send_from_warehouse","name","sender_client","client_name","address","city","pincode","client_shipping_address","client_shipping_city","client_shipping_state","client_shipping_pincode","gst","client_gst","bordered","size","kit_info","flexDirection","hsn_code","short_code","textTransform","String","fromCharCode","num","toString","n","substr","str","Number","inWords","sales_order","transport_by","driver_name","driver_number","vehicle_number","pageBreakInside","width","justifyContent","alignItems","padding","margin","fontSize","color","spinning","position","marginLeft","marginTop"],"mappings":"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","file":"static/js/11.4168628a.chunk.js","sourcesContent":["import React, { useState , useEffect } from 'react';\nimport { Row, Col, Typography, Spin } from 'antd';\nimport { Table } from 'react-bootstrap';\n\nimport { retrieveAllotments, retrieveAllotmentsCalender } from 'common/api/auth';\n\nimport './docket.styles.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst { Title } = Typography;\n\nconst Docket = ({ location,match }) => {\n  const [allotment, setAllotment] = useState(null);\n  const [total, setTotal] = useState(0);\n\n  useEffect(async () => {\n    const fetchAllotment = async () => {\n      if(location.state){\n        if(location.state.id){\n          const { data } = await retrieveAllotmentsCalender(location.state.id);\n          // const { data } = await retrieveAllotments(location.state.id);\n          if (data) setAllotment(data);\n        }}\n      else{\n        const len = location.pathname.length\n        const id = location.pathname.slice(17,len);\n        const { data } = await retrieveAllotmentsCalender(id)\n        console.log(data,id,\"ye wala\")\n        if (data) setAllotment(data);\n      }\n    };\n    fetchAllotment();\n  }, [location]);\n\n  useEffect(() => {\n    const calcTotal = () => {\n      let tot = 0;\n      if (allotment) {\n        allotment.flows.map((flow) => {\n          const alloted = flow.alloted_quantity;\n          flow.kit.products.map((prod) => {\n            tot += alloted * prod.quantity * prod.product.priceperunit;\n            return null;\n          });\n          return null;\n        });\n      }\n      setTotal(tot);\n    };\n    calcTotal();\n  }, [allotment]);\n\n  const a = [\n    '',\n    'one ',\n    'two ',\n    'three ',\n    'four ',\n    'five ',\n    'six ',\n    'seven ',\n    'eight ',\n    'nine ',\n    'ten ',\n    'eleven ',\n    'twelve ',\n    'thirteen ',\n    'fourteen ',\n    'fifteen ',\n    'sixteen ',\n    'seventeen ',\n    'eighteen ',\n    'nineteen ',\n  ];\n  const b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n\n  function inWords(num) {\n    if ((num = num.toString()).length > 9) return 'overflow';\n    const n = (`000000000${  num}`).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\n    if (!n) return;\n    let str = '';\n    str += n[1] != 0 ? `${a[Number(n[1])] || `${b[n[1][0]]  } ${  a[n[1][1]]}`  }crore ` : '';\n    str += n[2] != 0 ? `${a[Number(n[2])] || `${b[n[2][0]]  } ${  a[n[2][1]]}`  }lakh ` : '';\n    str += n[3] != 0 ? `${a[Number(n[3])] || `${b[n[3][0]]  } ${  a[n[3][1]]}`  }thousand ` : '';\n    str += n[4] != 0 ? `${a[Number(n[4])] || `${b[n[4][0]]  } ${  a[n[4][1]]}`  }hundred ` : '';\n    str +=\n      n[5] != 0\n        ? `${(str != '' ? 'and ' : '') + (a[Number(n[5])] || `${b[n[5][0]]  } ${  a[n[5][1]]}`)  }only `\n        : '';\n    return str;\n  }\n\n  if (allotment)\n    return (\n      <div className='container-docket'>\n        <div className='header-docket'>\n          <div className='logo-docket'>\n            <img src={`${process.env.PUBLIC_URL  }/home-logo.png`} alt='Yantraksh' />\n          </div>\n          <div className='heading-docket'>\n            <Title level={2} style={{ fontWeight: 'bold' }}>\n              DELIVERY CHALLAN\n            </Title>\n          </div>\n        </div>\n        <hr />\n        <Row className='meta-docket'>\n          <Col span={17} className='left'>\n            <Row>\n              <Col span={22}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Transaction No. : </p>\n                <p style={{ display: 'inline' }}>{allotment.transaction_no}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={22}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Transaction Date : </p>\n                <p style={{ display: 'inline' }}>{allotment.dispatch_date.slice(0, 10)}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={22}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Dispatch Date : </p>\n                <p style={{ display: 'inline' }}>{allotment.dispatch_date.slice(0, 10)}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={22}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Transaction Type : Allot</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={22}>\n                <p style={{ display: 'inline', fontWeight: 'bold' }}>\n                  KIT ID : &nbsp;\n                  {allotment.flows.map((flow, idx) => {\n                    if (idx === allotment.flows.length - 1) return flow.kit.kit_name.slice(3);\n                    return `${flow.kit.kit_name.slice(3)  }/`;\n                  })}\n                </p>\n              </Col>\n            </Row>\n          </Col>\n          <Col\n            span={7}\n            className='right'\n            style={{\n              fontFamily: 'Arial, Helvetica, sans-serif',\n            }}>\n            <p>\n              [ &nbsp;] Original for Consignee\n              {' '}\n              <br />\n              {' '}\n              [ &nbsp;] Duplicate for Transporter\n              {' '}\n              <br />\n              [\n              &nbsp;] Triplicate for Consignor\n            </p>\n          </Col>\n        </Row>\n        <div className='main-data-docket'>\n          <Row>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>Sender's Name : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {allotment.send_from_warehouse.name}\n                </Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>Receiver's Name : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {allotment.flows[0].flow.sender_client.client_name}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>Sender's Address : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {`${allotment.send_from_warehouse.address \n                  }, ${ \n                    allotment.send_from_warehouse.city \n                  }, ${ \n                    allotment.send_from_warehouse.state \n                  }, ${ \n                    allotment.send_from_warehouse.pincode}`}\n                </Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>Receiver's Address : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {`${allotment.flows[0].flow.sender_client.client_shipping_address \n                  }, ${ \n                    allotment.flows[0].flow.sender_client.client_shipping_city \n                  }, ${ \n                    allotment.flows[0].flow.sender_client.client_shipping_state \n                  }, ${ \n                    allotment.flows[0].flow.sender_client.client_shipping_pincode}`}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>GST : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {allotment.send_from_warehouse.gst}\n                </Col>\n              </Row>\n            </Col>\n            <Col span={12}>\n              <Row>\n                <Col span={10}>\n                  <p style={{ fontWeight: 'bold' }}>GST : </p>\n                </Col>\n                <Col span={12} style={{ wordWrap: 'break-word' }}>\n                  {allotment.flows[0].flow.sender_client.client_gst}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n        <Row className='table-docket'>\n          <Table bordered size='sm'>\n            <thead>\n              <tr>\n                <th>Kit ID</th>\n                <th>Kit Name</th>\n                <th>Quantity</th>\n                <th>HSN/SAC</th>\n                <th>Product Code</th>\n                <th>Product Name</th>\n                <th>Product Qty</th>\n              </tr>\n            </thead>\n            <tbody>\n              {allotment.flows.map((flow) => {\n                return (\n                  <tr>\n                    <td>{flow.kit.kit_name}</td>\n                    <td>{flow.kit.kit_info}</td>\n                    <td>{flow.alloted_quantity}</td>\n                    <td>\n                      {flow.kit.products.map((prod) => (\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <p>{prod.product.hsn_code}</p>\n                        </div>\n                      ))}\n                    </td>\n                    <td>\n                      {flow.kit.products.map((prod) => (\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <p>{prod.product.short_code}</p>\n                        </div>\n                      ))}\n                    </td>\n                    <td>\n                      {flow.kit.products.map((prod) => (\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <p>{prod.product.name}</p>\n                        </div>\n                      ))}\n                    </td>\n                    <td>\n                      {flow.kit.products.map((prod) => (\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                          <p>{prod.quantity * flow.alloted_quantity}</p>\n                        </div>\n                      ))}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </Row>\n        <Row className='final-docket'>\n          <Col span={12}>\n            <Row>\n              <Col span={7}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Amount in Words : </p>\n              </Col>\n              <Col span={16}>\n                <p style={{ display: 'inline', wordWrap: 'break-word', textTransform: 'capitalize' }}>\n                  {`${String.fromCharCode(0x20b9)  } ${  inWords(total)}`}\n                </p>\n              </Col>\n              <br />\n            </Row>\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>SO No. : </p>\n                <p style={{ display: 'inline' }}>{allotment.sales_order.id}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Transporter Name : </p>\n                <p style={{ display: 'inline', wordWrap: 'break-word' }}>\n                  {allotment.transport_by.name}\n                </p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Driver Name : </p>\n                <p style={{ display: 'inline', wordWrap: 'break-word' }}>{allotment.driver_name}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Driver No. : </p>\n                <p style={{ display: 'inline', wordWrap: 'break-word' }}>{allotment.driver_number}</p>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col span={12}>\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Grand Total : </p>\n                <p style={{ fontWeight: 'bold', display: 'inline', wordWrap: 'break-word' }}>\n                  {`${String.fromCharCode(0x20b9)  } ${  total}`}\n                </p>\n              </Col>\n            </Row>\n            {/* <Row> */}\n            {/*  <Col span={24}> */}\n            {/*    <p style={{ fontWeight: 'bold', display: 'inline' }}>Creation Date : </p> */}\n            {/*    <p style={{ display: 'inline', wordWrap: 'break-word' }}> */}\n            {/*      {`${new Date().getDate().toString() */}\n            {/*      }/${ */}\n            {/*        new Date().getMonth().toString() */}\n            {/*      }/${ */}\n            {/*        new Date().getFullYear().toString()}`} */}\n            {/*    </p> */}\n            {/*  </Col> */}\n            {/* </Row> */}\n            <Row>\n              <Col span={24}>\n                <p style={{ fontWeight: 'bold', display: 'inline' }}>Vehicle No. : </p>\n                <p style={{ display: 'inline', wordWrap: 'break-word' }}>\n                  {allotment.vehicle_number}\n                </p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <hr />\n        <table style={{ pageBreakInside: 'avoid' }}>\n          <div className='declaration'>\n            <p style={{ fontWeight: 'bold', display: 'inline' }}>Declaration : </p>\n            <p style={{ display: 'inline' }}>\n              The packaging products given on hire shall always remain the property of Yantraksh\n              Logistics Private Limited and shall not be used for the purpose otherwise agreed upon.\n              The same shall be returned at the address notified by Yantraksh Logistics Private\n              Limited.\n            </p>\n            <br />\n            <p style={{ fontWeight: 'bold', display: 'inline' }}>Note : </p>\n            <p style={{ display: 'inline' }}>\n              {' '}\n              No E-Way Bill is required for Empty Cargo Containers. Refer, Rule 14 of Central Goods\n              and Services Tax (Second Amendment) Rules, 2018.\n            </p>\n          </div>\n        </table>\n\n        <hr />\n        <table style={{ pageBreakInside: 'avoid', width: '90vw' }}>\n          <div className='footer'>\n            <Row>\n              <Col span={1} />\n              <Col span={11} style={{ fontWeight: 'bold' }}>\n                For Sending Location :\n              </Col>\n              <Col span={6} />\n              <Col span={6} style={{ fontWeight: 'bold' }}>\n                For Receiving Location :\n              </Col>\n            </Row>\n            <br />\n            {' '}\n            <br />\n            <br />\n            <Row>\n              <Col span={1} />\n              <Col span={11} style={{ fontWeight: 'bold' }}>\n                Authorized Signature\n              </Col>\n              <Col span={6} />\n              <Col span={6} style={{ fontWeight: 'bold' }}>\n                Authorized Signature\n              </Col>\n            </Row>\n            <Row>\n              <Col span={1} />\n              <Col span={11}>(Company Seal & Signature)</Col>\n              <Col span={6} />\n              <Col span={6}>(Company Seal & Signature)</Col>\n            </Row>\n            <br />\n            {' '}\n            <br />\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'Center',\n                alignItems: 'center',\n                flexDirection: 'column',\n                padding: '0',\n                margin: '0',\n              }}>\n              <p style={{ fontSize: '26px', color: '#034efc' }}>\n                Yantraksh Logistics Private Limited\n              </p>\n              <p>CIN No: U74999GJ2018PTC105552</p>\n            </div>\n          </div>\n        </table>\n      </div>\n    );\n  return (\n    <Spin spinning style={{ position: 'absolute', marginLeft: '49vw', marginTop: '49vh' }} />\n  );\n};\n\nexport default Docket;\n"],"sourceRoot":""}